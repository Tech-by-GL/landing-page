"use client"

import { useEffect, useRef } from "react"
import Image from "next/image"
import { motion, useAnimation, useInView } from "framer-motion"
import {
  Globe,
  BookOpen,
  Brain,
  Users,
  Lightbulb,
  Award,
  Heart,
  Zap,
  TrendingUp,
  CheckCircle,
  ArrowRight,
} from "lucide-react"

const philosophyPillars = [
  {
    icon: Globe,
    title: "Chu·∫©n qu·ªëc t·∫ø, kh√¥ng ch·ªâ ƒëi·ªÉm s·ªë",
    description:
      "Ch√∫ng t√¥i h∆∞·ªõng ƒë·∫øn vi·ªác ph√°t tri·ªÉn nƒÉng l·ª±c ti·∫øng Anh th·ª±c s·ª± theo chu·∫©n qu·ªëc t·∫ø Cambridge v√† IELTS, thay v√¨ ch·ªâ t·∫≠p trung v√†o ƒëi·ªÉm s·ªë trong c√°c k·ª≥ thi truy·ªÅn th·ªëng.",
    color: "from-blue-500 to-cyan-600",
    stats: "98% h·ªçc vi√™n ƒë·∫°t ch·ª©ng ch·ªâ qu·ªëc t·∫ø",
  },
  {
    icon: Brain,
    title: "Ti·∫øng Anh nh∆∞ ng√¥n ng·ªØ th·ª© hai",
    description:
      "Th√¥ng qua ph∆∞∆°ng ph√°p STEAM, h·ªçc sinh kh√¥ng ch·ªâ h·ªçc 'v·ªÅ' ti·∫øng Anh m√† th·ª±c s·ª± s·ª≠ d·ª•ng ti·∫øng Anh nh∆∞ m·ªôt c√¥ng c·ª• ƒë·ªÉ kh√°m ph√°, s√°ng t·∫°o v√† gi·∫£i quy·∫øt v·∫•n ƒë·ªÅ.",
    color: "from-purple-500 to-violet-600",
    stats: "100% m√¥i tr∆∞·ªùng ti·∫øng Anh",
  },
  {
    icon: Heart,
    title: "Ph√°t tri·ªÉn to√†n di·ªán con ng∆∞·ªùi",
    description:
      "Ch√∫ng t√¥i tin r·∫±ng gi√°o d·ª•c kh√¥ng ch·ªâ l√† truy·ªÅn ƒë·∫°t ki·∫øn th·ª©c m√† c√≤n l√† nu√¥i d∆∞·ª°ng t∆∞ duy, k·ªπ nƒÉng s·ªëng v√† nh√¢n c√°ch c·ªßa t·ª´ng h·ªçc sinh.",
    color: "from-pink-500 to-rose-600",
    stats: "5 lƒ©nh v·ª±c ph√°t tri·ªÉn ƒë·ªìng th·ªùi",
  },
  {
    icon: Lightbulb,
    title: "H·ªçc qua tr·∫£i nghi·ªám th·ª±c t·∫ø",
    description:
      "M·ªói b√†i h·ªçc ƒë·ªÅu g·∫Øn li·ªÅn v·ªõi d·ª± √°n th·ª±c t·∫ø, gi√∫p h·ªçc sinh hi·ªÉu s√¢u v√† nh·ªõ l√¢u ki·∫øn th·ª©c th√¥ng qua vi·ªác ·ª©ng d·ª•ng v√†o cu·ªôc s·ªëng.",
    color: "from-orange-500 to-amber-600",
    stats: "3-4 tu·∫ßn m·ªói d·ª± √°n STEAM",
  },
]

export const traditionalVsModern = {
  traditional: {
    title: "Ph∆∞∆°ng ph√°p truy·ªÅn th·ªëng",
    icon: "üìö",
    characteristics: [
      "T·∫≠p trung v√†o ƒëi·ªÉm s·ªë trong tr∆∞·ªùng",
      "H·ªçc thu·ªôc l√≤ng t·ª´ v·ª±ng v√† ng·ªØ ph√°p",
      "√çt c∆° h·ªôi th·ª±c h√†nh giao ti·∫øp",
      "H·ªçc t√°ch bi·ªát v·ªõi th·ª±c t·∫ø",
      "ƒê√°nh gi√° qua b√†i ki·ªÉm tra vi·∫øt",
    ],
    color: "bg-gray-100 border-gray-300",
    textColor: "text-gray-600",
  },
  modern: {
    title: "Ph∆∞∆°ng ph√°p Chamchi",
    icon: "üöÄ",
    characteristics: [
      "H∆∞·ªõng ƒë·∫øn ch·ª©ng ch·ªâ qu·ªëc t·∫ø",
      "H·ªçc qua d·ª± √°n v√† tr·∫£i nghi·ªám",
      "Giao ti·∫øp t·ª± nhi√™n trong m√¥i tr∆∞·ªùng STEAM",
      "·ª®ng d·ª•ng ti·∫øng Anh v√†o khoa h·ªçc & c√¥ng ngh·ªá",
      "ƒê√°nh gi√° to√†n di·ªán 4 k·ªπ nƒÉng",
    ],
    color: "bg-primary/10 border-primary/30",
    textColor: "text-primary",
  },
}

const developmentAreas = [
  {
    area: "Ng√¥n ng·ªØ",
    description: "4 k·ªπ nƒÉng ti·∫øng Anh theo chu·∫©n qu·ªëc t·∫ø",
    icon: "üó£Ô∏è",
    skills: ["Listening", "Speaking", "Reading", "Writing"],
  },
  {
    area: "T∆∞ duy",
    description: "T∆∞ duy ph·∫£n bi·ªán v√† gi·∫£i quy·∫øt v·∫•n ƒë·ªÅ",
    icon: "üß†",
    skills: ["Critical Thinking", "Problem Solving", "Analysis", "Creativity"],
  },
  {
    area: "Khoa h·ªçc",
    description: "Ki·∫øn th·ª©c STEAM ·ª©ng d·ª•ng th·ª±c t·∫ø",
    icon: "üî¨",
    skills: ["Science", "Technology", "Engineering", "Mathematics"],
  },
  {
    area: "X√£ h·ªôi",
    description: "K·ªπ nƒÉng giao ti·∫øp v√† l√†m vi·ªác nh√≥m",
    icon: "üë•",
    skills: ["Communication", "Collaboration", "Leadership", "Empathy"],
  },
  {
    area: "C·∫£m x√∫c",
    description: "T·ª± tin v√† ƒëam m√™ h·ªçc t·∫≠p",
    icon: "‚ù§Ô∏è",
    skills: ["Confidence", "Motivation", "Resilience", "Growth Mindset"],
  },
]

export function EducationalPhilosophy() {
  const ref = useRef(null)
  const isInView = useInView(ref, { once: true, amount: 0.2 })
  const controls = useAnimation()

  useEffect(() => {
    if (isInView) {
      controls.start("visible")
    }
  }, [isInView, controls])

  const container = {
    hidden: { opacity: 0 },
    visible: {
      opacity: 1,
      transition: {
        staggerChildren: 0.2,
      },
    },
  }

  const item = {
    hidden: { opacity: 0, y: 30 },
    visible: {
      opacity: 1,
      y: 0,
      transition: {
        duration: 0.8,
      },
    },
  }

  return (
    <section
      className="py-16 md:py-20 bg-gradient-to-br from-white via-blue-50/30 to-purple-50/30"
      id="philosophy"
      ref={ref}
    >
      <div className="container-custom">
        {/* Header */}
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={isInView ? { opacity: 1, y: 0 } : { opacity: 0, y: 20 }}
          transition={{ duration: 0.6 }}
          className="text-center max-w-4xl mx-auto mb-16"
        >
          <div className="inline-flex items-center gap-2 bg-primary/10 text-primary px-4 py-2 rounded-full text-sm font-medium mb-6">
            <Heart className="h-4 w-4" />
            <span>Tri·∫øt l√Ω gi√°o d·ª•c</span>
          </div>

          <h2 className="text-3xl md:text-4xl lg:text-5xl font-bold text-gray-900 mb-6">
            Gi√°o d·ª•c <span className="text-primary">to√†n di·ªán</span> cho t∆∞∆°ng lai
          </h2>
          <p className="text-lg text-gray-700 leading-relaxed">
            T·∫°i Chamchi, ch√∫ng t√¥i kh√¥ng ch·ªâ d·∫°y ti·∫øng Anh m√† c√≤n nu√¥i d∆∞·ª°ng nh·ªØng c√¥ng d√¢n to√†n c·∫ßu c√≥ t∆∞ duy s√°ng t·∫°o,
            k·ªπ nƒÉng 21st century v√† kh·∫£ nƒÉng s·ª≠ d·ª•ng ti·∫øng Anh nh∆∞ ng√¥n ng·ªØ th·ª© hai th·ª±c s·ª±.
          </p>
        </motion.div>

        {/* Philosophy Pillars */}
        <motion.div
          variants={container}
          initial="hidden"
          animate={controls}
          className="grid grid-cols-1 md:grid-cols-2 gap-8 mb-16"
        >
          {philosophyPillars.map((pillar, index) => (
            <motion.div
              key={index}
              variants={item}
              className="bg-white rounded-2xl p-8 shadow-lg hover:shadow-xl transition-all duration-300"
              whileHover={{ y: -5 }}
            >
              <div className="flex items-start gap-4">
                <div
                  className={`w-16 h-16 bg-gradient-to-r ${pillar.color} rounded-2xl flex items-center justify-center shrink-0`}
                >
                  <pillar.icon className="h-8 w-8 text-white" />
                </div>
                <div className="flex-1">
                  <h3 className="text-xl font-bold text-gray-900 mb-3">{pillar.title}</h3>
                  <p className="text-gray-700 leading-relaxed mb-4">{pillar.description}</p>
                  <div className="inline-flex items-center gap-2 bg-primary/10 text-primary px-3 py-1 rounded-full text-sm font-medium">
                    <TrendingUp className="h-3 w-3" />
                    {pillar.stats}
                  </div>
                </div>
              </div>
            </motion.div>
          ))}
        </motion.div>

        {/* Traditional vs Modern Comparison */}
        <motion.div
          initial={{ opacity: 0, y: 30 }}
          animate={isInView ? { opacity: 1, y: 0 } : { opacity: 0, y: 30 }}
          transition={{ duration: 0.8, delay: 0.4 }}
          className="mb-16"
        >
          <div className="text-center mb-12">
            <h3 className="text-2xl md:text-3xl font-bold text-gray-900 mb-4">
              S·ª± kh√°c bi·ªát trong <span className="text-primary">ph∆∞∆°ng ph√°p gi√°o d·ª•c</span>
            </h3>
            <p className="text-gray-700 max-w-3xl mx-auto">
              Chamchi ƒëi ti√™n phong trong vi·ªác thay ƒë·ªïi c√°ch ti·∫øp c·∫≠n gi√°o d·ª•c ti·∫øng Anh, t·ª´ h·ªçc thu·ªôc l√≤ng sang h·ªçc qua
              tr·∫£i nghi·ªám th·ª±c t·∫ø.
            </p>
          </div>

          <div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
            {/* Traditional Method */}
            <motion.div
              className={`${traditionalVsModern.traditional.color} border-2 rounded-2xl p-8`}
              initial={{ opacity: 0, x: -30 }}
              animate={{ opacity: 1, x: 0 }}
              transition={{ delay: 0.6 }}
            >
              <div className="text-center mb-6">
                <div className="text-4xl mb-3">{traditionalVsModern.traditional.icon}</div>
                <h4 className="text-xl font-bold text-gray-900">{traditionalVsModern.traditional.title}</h4>
              </div>
              <ul className="space-y-3">
                {traditionalVsModern.traditional.characteristics.map((char, index) => (
                  <li key={index} className={`flex items-start gap-3 ${traditionalVsModern.traditional.textColor}`}>
                    <span className="w-2 h-2 bg-gray-400 rounded-full mt-2 shrink-0"></span>
                    <span>{char}</span>
                  </li>
                ))}
              </ul>
            </motion.div>

            {/* Modern Method */}
            <motion.div
              className={`${traditionalVsModern.modern.color} border-2 rounded-2xl p-8 relative overflow-hidden`}
              initial={{ opacity: 0, x: 30 }}
              animate={{ opacity: 1, x: 0 }}
              transition={{ delay: 0.8 }}
            >
              {/* Highlight Badge */}
              <div className="absolute top-4 right-4 bg-accent text-gray-900 px-3 py-1 rounded-full text-sm font-bold">
                Ph∆∞∆°ng ph√°p m·ªõi
              </div>

              <div className="text-center mb-6">
                <div className="text-4xl mb-3">{traditionalVsModern.modern.icon}</div>
                <h4 className="text-xl font-bold text-gray-900">{traditionalVsModern.modern.title}</h4>
              </div>
              <ul className="space-y-3">
                {traditionalVsModern.modern.characteristics.map((char, index) => (
                  <li key={index} className={`flex items-start gap-3 ${traditionalVsModern.modern.textColor}`}>
                    <CheckCircle className="w-5 h-5 text-primary mt-0.5 shrink-0" />
                    <span className="font-medium">{char}</span>
                  </li>
                ))}
              </ul>
            </motion.div>
          </div>

          {/* Arrow indicating progression */}
          <div className="flex justify-center mt-8">
            <motion.div
              className="flex items-center gap-4 bg-white rounded-full px-6 py-3 shadow-lg"
              initial={{ opacity: 0, scale: 0.8 }}
              animate={{ opacity: 1, scale: 1 }}
              transition={{ delay: 1.0 }}
            >
              <span className="text-gray-600 font-medium">Ti·∫øn h√≥a gi√°o d·ª•c</span>
              <ArrowRight className="h-5 w-5 text-primary" />
              <span className="text-primary font-bold">T∆∞∆°ng lai</span>
            </motion.div>
          </div>
        </motion.div>

        {/* Comprehensive Development Areas */}
        <motion.div
          initial={{ opacity: 0, y: 30 }}
          animate={isInView ? { opacity: 1, y: 0 } : { opacity: 0, y: 30 }}
          transition={{ duration: 0.8, delay: 0.6 }}
          className="mb-16"
        >
          <div className="text-center mb-12">
            <h3 className="text-2xl md:text-3xl font-bold text-gray-900 mb-4">
              <span className="text-primary">5 lƒ©nh v·ª±c</span> ph√°t tri·ªÉn to√†n di·ªán
            </h3>
            <p className="text-gray-700 max-w-3xl mx-auto">
              M·ªói h·ªçc sinh t·∫°i Chamchi ƒë∆∞·ª£c ph√°t tri·ªÉn ƒë·ªìng th·ªùi tr√™n 5 lƒ©nh v·ª±c quan tr·ªçng, t·∫°o n·ªÅn t·∫£ng v·ªØng ch·∫Øc cho
              th√†nh c√¥ng trong t∆∞∆°ng lai.
            </p>
          </div>

          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-5 gap-6">
            {developmentAreas.map((area, index) => (
              <motion.div
                key={index}
                className="bg-white rounded-2xl p-6 shadow-lg hover:shadow-xl transition-all duration-300 text-center group"
                initial={{ opacity: 0, y: 20 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ delay: 0.8 + index * 0.1 }}
                whileHover={{ y: -5, scale: 1.02 }}
              >
                <div className="text-4xl mb-4 group-hover:scale-110 transition-transform">{area.icon}</div>
                <h4 className="text-lg font-bold text-gray-900 mb-2">{area.area}</h4>
                <p className="text-sm text-gray-600 mb-4">{area.description}</p>

                <div className="space-y-1">
                  {area.skills.map((skill, skillIndex) => (
                    <div key={skillIndex} className="bg-primary/10 text-primary px-2 py-1 rounded text-xs font-medium">
                      {skill}
                    </div>
                  ))}
                </div>
              </motion.div>
            ))}
          </div>
        </motion.div>

        {/* Visual Representation */}
        <motion.div
          initial={{ opacity: 0, y: 30 }}
          animate={isInView ? { opacity: 1, y: 0 } : { opacity: 0, y: 30 }}
          transition={{ duration: 0.8, delay: 0.8 }}
          className="bg-gradient-to-r from-primary/10 to-accent/10 rounded-2xl p-8 md:p-12 mb-16"
        >
          <div className="grid grid-cols-1 lg:grid-cols-2 gap-8 items-center">
            {/* Content */}
            <div>
              <h3 className="text-2xl md:text-3xl font-bold text-gray-900 mb-6">
                Ti·∫øng Anh nh∆∞ <span className="text-primary">ng√¥n ng·ªØ th·ª© hai</span> th·ª±c s·ª±
              </h3>

              <div className="space-y-4 mb-6">
                <div className="flex items-start gap-3">
                  <div className="w-8 h-8 bg-primary/20 rounded-full flex items-center justify-center shrink-0 mt-1">
                    <span className="text-primary font-bold text-sm">1</span>
                  </div>
                  <div>
                    <h4 className="font-bold text-gray-900 mb-1">T∆∞ duy b·∫±ng ti·∫øng Anh</h4>
                    <p className="text-gray-700 text-sm">
                      H·ªçc sinh kh√¥ng d·ªãch t·ª´ ti·∫øng Vi·ªát m√† t∆∞ duy tr·ª±c ti·∫øp b·∫±ng ti·∫øng Anh
                    </p>
                  </div>
                </div>

                <div className="flex items-start gap-3">
                  <div className="w-8 h-8 bg-primary/20 rounded-full flex items-center justify-center shrink-0 mt-1">
                    <span className="text-primary font-bold text-sm">2</span>
                  </div>
                  <div>
                    <h4 className="font-bold text-gray-900 mb-1">S·ª≠ d·ª•ng t·ª± nhi√™n</h4>
                    <p className="text-gray-700 text-sm">
                      Ti·∫øng Anh tr·ªü th√†nh c√¥ng c·ª• ƒë·ªÉ h·ªçc t·∫≠p v√† kh√°m ph√°, kh√¥ng ph·∫£i m·ª•c ti√™u cu·ªëi c√πng
                    </p>
                  </div>
                </div>

                <div className="flex items-start gap-3">
                  <div className="w-8 h-8 bg-primary/20 rounded-full flex items-center justify-center shrink-0 mt-1">
                    <span className="text-primary font-bold text-sm">3</span>
                  </div>
                  <div>
                    <h4 className="font-bold text-gray-900 mb-1">Giao ti·∫øp hi·ªáu qu·∫£</h4>
                    <p className="text-gray-700 text-sm">
                      T·ª± tin giao ti·∫øp trong m·ªçi t√¨nh hu·ªëng, t·ª´ h·ªçc thu·∫≠t ƒë·∫øn ƒë·ªùi s·ªëng h√†ng ng√†y
                    </p>
                  </div>
                </div>
              </div>

              <div className="bg-white/80 backdrop-blur-sm rounded-lg p-4">
                <div className="flex items-center gap-3 mb-2">
                  <Zap className="h-5 w-5 text-accent" />
                  <span className="font-bold text-gray-900">K·∫øt qu·∫£ ƒë·∫°t ƒë∆∞·ª£c:</span>
                </div>
                <p className="text-gray-700 text-sm">
                  H·ªçc sinh c√≥ th·ªÉ s·ª≠ d·ª•ng ti·∫øng Anh ƒë·ªÉ h·ªçc c√°c m√¥n khoa h·ªçc, thuy·∫øt tr√¨nh d·ª± √°n, v√† giao ti·∫øp t·ª± nhi√™n
                  nh∆∞ ng∆∞·ªùi b·∫£n ng·ªØ trong lƒ©nh v·ª±c chuy√™n m√¥n.
                </p>
              </div>
            </div>

            {/* Visual */}
            <div className="relative">
              <div className="relative h-64 md:h-80 bg-white rounded-2xl overflow-hidden shadow-xl">
                <Image
                  src="/placeholder.svg?height=400&width=600"
                  alt="H·ªçc sinh Chamchi s·ª≠ d·ª•ng ti·∫øng Anh t·ª± nhi√™n trong d·ª± √°n STEAM"
                  fill
                  className="object-cover"
                />
                <div className="absolute inset-0 bg-gradient-to-t from-black/60 via-transparent to-transparent" />

                {/* Overlay Content */}
                <div className="absolute bottom-4 left-4 right-4 text-white">
                  <div className="bg-white/20 backdrop-blur-sm rounded-lg p-3">
                    <h4 className="font-bold mb-1">H·ªçc sinh thuy·∫øt tr√¨nh d·ª± √°n AI</h4>
                    <p className="text-sm opacity-90">100% b·∫±ng ti·∫øng Anh, t·ª± tin v√† chuy√™n nghi·ªáp</p>
                  </div>
                </div>

                {/* Success Indicators */}
                <div className="absolute top-4 left-4">
                  <div className="bg-green-500/90 text-white px-3 py-1 rounded-full text-sm font-bold">
                    ‚úì T∆∞ duy ti·∫øng Anh
                  </div>
                </div>
                <div className="absolute top-4 right-4">
                  <div className="bg-blue-500/90 text-white px-3 py-1 rounded-full text-sm font-bold">
                    ‚úì Giao ti·∫øp t·ª± nhi√™n
                  </div>
                </div>
              </div>

              {/* Floating Achievement Cards */}
              <motion.div
                className="absolute -top-4 -right-4 bg-accent text-gray-900 px-4 py-2 rounded-xl shadow-lg"
                initial={{ opacity: 0, scale: 0.8 }}
                animate={{ opacity: 1, scale: 1 }}
                transition={{ delay: 1.2 }}
              >
                <div className="text-sm font-bold">Chu·∫©n qu·ªëc t·∫ø</div>
                <div className="text-xs opacity-75">Cambridge & IELTS</div>
              </motion.div>

              <motion.div
                className="absolute -bottom-4 -left-4 bg-primary text-white px-4 py-2 rounded-xl shadow-lg"
                initial={{ opacity: 0, scale: 0.8 }}
                animate={{ opacity: 1, scale: 1 }}
                transition={{ delay: 1.4 }}
              >
                <div className="text-sm font-bold">STEAM Method</div>
                <div className="text-xs opacity-90">Learn by Doing</div>
              </motion.div>
            </div>
          </div>
        </motion.div>

        {/* Call to Action */}
        <motion.div
          initial={{ opacity: 0, y: 30 }}
          animate={isInView ? { opacity: 1, y: 0 } : { opacity: 0, y: 30 }}
          transition={{ duration: 0.8, delay: 1.0 }}
          className="text-center"
        >
          <div className="bg-white rounded-2xl shadow-xl p-8 max-w-4xl mx-auto">
            <h3 className="text-2xl md:text-3xl font-bold text-gray-900 mb-4">
              C√πng x√¢y d·ª±ng t∆∞∆°ng lai cho con em ch√∫ng ta
            </h3>
            <p className="text-gray-700 mb-8 max-w-2xl mx-auto">
              T·∫°i Chamchi, ch√∫ng t√¥i kh√¥ng ch·ªâ d·∫°y ti·∫øng Anh m√† c√≤n chu·∫©n b·ªã cho c√°c em nh·ªØng k·ªπ nƒÉng c·∫ßn thi·∫øt ƒë·ªÉ th√†nh
              c√¥ng trong th·∫ø gi·ªõi to√†n c·∫ßu h√≥a. H√£y ƒë·ªÉ ch√∫ng t√¥i ƒë·ªìng h√†nh c√πng con em b·∫°n tr√™n h√†nh tr√¨nh n√†y.
            </p>

            {/* Key Benefits */}
            <div className="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8">
              <div className="text-center">
                <div className="w-16 h-16 bg-primary/10 rounded-full flex items-center justify-center mx-auto mb-3">
                  <Globe className="h-8 w-8 text-primary" />
                </div>
                <h4 className="font-bold text-gray-900 mb-2">T·∫ßm nh√¨n qu·ªëc t·∫ø</h4>
                <p className="text-sm text-gray-600">Chu·∫©n b·ªã cho m√¥i tr∆∞·ªùng h·ªçc t·∫≠p v√† l√†m vi·ªác to√†n c·∫ßu</p>
              </div>
              <div className="text-center">
                <div className="w-16 h-16 bg-primary/10 rounded-full flex items-center justify-center mx-auto mb-3">
                  <Brain className="h-8 w-8 text-primary" />
                </div>
                <h4 className="font-bold text-gray-900 mb-2">T∆∞ duy s√°ng t·∫°o</h4>
                <p className="text-sm text-gray-600">Ph√°t tri·ªÉn kh·∫£ nƒÉng t∆∞ duy ph·∫£n bi·ªán v√† gi·∫£i quy·∫øt v·∫•n ƒë·ªÅ</p>
              </div>
              <div className="text-center">
                <div className="w-16 h-16 bg-primary/10 rounded-full flex items-center justify-center mx-auto mb-3">
                  <Award className="h-8 w-8 text-primary" />
                </div>
                <h4 className="font-bold text-gray-900 mb-2">Th√†nh c√¥ng b·ªÅn v·ªØng</h4>
                <p className="text-sm text-gray-600">N·ªÅn t·∫£ng v·ªØng ch·∫Øc cho th√†nh c√¥ng trong h·ªçc t·∫≠p v√† s·ª± nghi·ªáp</p>
              </div>
            </div>

            <div className="flex flex-col sm:flex-row gap-4 justify-center">
              <motion.button
                className="btn-primary flex items-center justify-center gap-2"
                whileHover={{ scale: 1.05 }}
                whileTap={{ scale: 0.95 }}
              >
                <BookOpen className="h-5 w-5" />
                T√¨m hi·ªÉu tri·∫øt l√Ω gi√°o d·ª•c
              </motion.button>
              <motion.button
                className="btn-accent flex items-center justify-center gap-2"
                whileHover={{ scale: 1.05 }}
                whileTap={{ scale: 0.95 }}
              >
                <Users className="h-5 w-5" />
                G·∫∑p g·ª° ƒë·ªôi ng≈© gi√°o vi√™n
              </motion.button>
            </div>
          </div>
        </motion.div>
      </div>
    </section>
  )
}
