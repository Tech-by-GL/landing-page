"use client";

import { useEffect, useRef } from "react";
import Link from "next/link";
import Image, { type ImageProps } from "next/image";
import { motion, useAnimation, useInView } from "framer-motion";
import { OptimizedImage } from "@/components/optimized-image";
import RegisterNow from "./register";

export const courses = [
  {
    id: 1,
    slug: "tieng-anh-tre-em",
    title: "Ti·∫øng Anh Tr·∫ª Em L·ªõp 1-5",
    description:
      "Kh√≥a h·ªçc ti·∫øng Anh d√†nh cho tr·∫ª em t·ª´ 6-10 tu·ªïi, gi√∫p c√°c em l√†m quen v·ªõi ti·∫øng Anh th√¥ng qua c√°c ho·∫°t ƒë·ªông vui nh·ªôn v√† s√°ng t·∫°o.",
    // image: "/KET-11.jpg",
    image: "https://chamchi.sgp1.cdn.digitaloceanspaces.com/website/1-mini.png",
    features: [
      "H·ªçc t·ª´ v·ª±ng c∆° b·∫£n qua tr√≤ ch∆°i v√† ho·∫°t ƒë·ªông",
      "Ph√°t tri·ªÉn to√†n di·ªán c√°c k·ªπ nƒÉng nghe, n√≥i, ƒë·ªçc, vi·∫øt",
      "H∆∞·ªõng t·ªõi t√≠nh ch·ªâ qu·ªëc t·∫ø",
    ],
    input: ["H·ªçc sinh t·ª´ ti·ªÉu h·ªçc"],
    output: ["STARTER, MOVERS, FLYERS"],
    duration: "Linh ho·∫°t",
  },
  {
    id: 2,
    slug: "tieng-anh-lop-6-9",
    title: "Ti·∫øng Anh L·ªõp 6-9",
    description:
      "Kh√≥a h·ªçc chu·∫©n b·ªã cho k·ª≥ thi Cambridge Key English Test (KET), ch·ª©ng ch·ªâ ti·∫øng Anh c∆° b·∫£n ƒë·∫ßu ti√™n.",
    // image: "/KET-2.jpg",
    image: "https://chamchi.sgp1.cdn.digitaloceanspaces.com/website/2-mini.png",
    features: [
      "2.000+ t·ª´ v·ª±ng th√¥ng d·ª•ng tr·∫£i d√†i 16 m√¥n h·ªçc",
      "Di·ªÖn ƒë·∫°t √Ω t∆∞·ªüng c√° nh√¢n & t·ª± tin giao ti·∫øp",
      "C√°c ki·∫øn th·ª©c n·ªÅn t·∫£ng v·ªÅ ƒë·ªùi s·ªëng v√† khoa h·ªçc",
    ],
    output: ["KET, PET, Thi v√†o l·ªõp 10"],
    duration: "12-14 th√°ng",
  },
  {
    id: 3,
    slug: "tieng-anh-lop-10-12",
    title: "Ti·∫øng Anh L·ªõp 10-12",
    description:
      "Kh√≥a h·ªçc chu·∫©n b·ªã cho k·ª≥ thi IELTS, gi√∫p h·ªçc vi√™n ƒë·∫°t ƒë∆∞·ª£c ƒëi·ªÉm s·ªë m·ª•c ti√™u t·ª´ 5.5 ƒë·∫øn 7.5.",
    // image: "/lop10-3.jpg",
    image: "https://chamchi.sgp1.cdn.digitaloceanspaces.com/website/3-mini.png",
    features: [
      "H·ªçc thu·∫≠t v√† giao ti·∫øp ti·∫øng Anh n√¢ng cao",
      "Ph√°t tri·ªÉn k·ªπ nƒÉng vi·∫øt lu·∫≠n v√† thuy·∫øt tr√¨nh",
      "Chu·∫©n b·ªã cho b√†i thi IELTS Academic - General Training",
    ],
    output: ["Ti·∫øng Anh C·∫•p THPT"],
    duration: "06-24 th√°ng",
  },
  {
    id: 4,
    slug: "tieng-anh-ielts",
    title: "IELTS",
    description:
      "Kh√≥a h·ªçc chu·∫©n b·ªã cho k·ª≥ thi Cambridge Preliminary English Test (PET), ch·ª©ng ch·ªâ ti·∫øng Anh tr√¨nh ƒë·ªô trung c·∫•p.",
    // image: "/ielts2.png",
    image: "https://chamchi.sgp1.cdn.digitaloceanspaces.com/website/4-mini.png",
    features: [
      "1.200+ t·ª´ v·ª±ng n√¢ng cao tr·∫£i d√†i 12 m√¥n h·ªçc",
      "Ti·∫øp c·∫≠n STEAM v·ªõi ƒë·ªô ph·ª©c t·∫°p cao",
      "Ph√°t tri·ªÉn t∆∞ duy ph·∫£n bi·ªán v√† k·ªπ nƒÉng gi·∫£i quy·∫øt v·∫•n ƒë·ªÅ",
    ],
    output: ["IELTS"],
    duration: "12-16 th√°ng",
  },
  {
    id: 5,
    slug: "tieng-anh-cho-nguoi-di-lam",
    title: "Ti·∫øng Anh Cho Ng∆∞·ªùi ƒêi L√†m",
    description:
      "Kh√≥a h·ªçc ng·ªØ ph√°p ti·∫øng Anh c∆° b·∫£n, gi√∫p h·ªçc vi√™n n·∫Øm v·ªØng c·∫•u tr√∫c ng·ªØ ph√°p v√† s·ª≠ d·ª•ng ch√≠nh x√°c trong giao ti·∫øp & c√°c b√†i thi ·ªü tr∆∞·ªùng h·ªçc.",
    // image: "/ielts5.jpg",
    image: "https://chamchi.sgp1.cdn.digitaloceanspaces.com/website/6-mini.png",
    features: [
      "N·∫Øm v·ªØng c√°c c·∫•u tr√∫c ng·ªØ ph√°p c∆° b·∫£n",
      "C·∫£i thi·ªán kh·∫£ nƒÉng vi·∫øt v√† n√≥i ti·∫øng Anh",
      "Chu·∫©n b·ªã cho c√°c b√†i ki·ªÉm tra ng·ªØ ph√°p ·ªü tr∆∞·ªùng",
    ],
    output: ["Giao ti·∫øp ti·∫øng Anh linh ho·∫°t"],
    duration: "Linh ho·∫°t",
  },
  {
    id: 6,
    slug: "chung-chi-google-ai",
    title: "Ch·ª©ng Ch·ªâ Google AI",
    description:
      "Kho√° h·ªçc AI ng·∫Øn h·∫°n, n∆°i ChƒÉm Ch·ªâ gi√∫p c√°c h·ªçc sinh th·ª±c h√†nh & ·ª©ng d·ª•ng AI, qua ƒë√≥ l√† c√°c b·∫°n s·∫Ω c√≥ th·ªÉ s·ª≠ d·ª•ng AI ƒë·ªÉ gi·∫£i quy·∫øt c√°c v·∫•n ƒë·ªÅ th·ª±c t·∫ø trong cu·ªôc s·ªëng v√† c√¥ng vi·ªác. ƒê·ªìng th·ªùi, c√°c b·∫°n s·∫Ω ƒë∆∞·ª£c c·∫•p ch·ª©ng ch·ªâ Google AI sau khi ho√†n th√†nh kho√° h·ªçc.",
    // image: "/ielts3.png",
    image: "https://chamchi.sgp1.cdn.digitaloceanspaces.com/website/7-mini.png",
    features: [
      "N·∫Øm v·ªØng c√°c c·∫•u tr√∫c ng·ªØ ph√°p c∆° b·∫£n",
      "C·∫£i thi·ªán kh·∫£ nƒÉng vi·∫øt v√† n√≥i ti·∫øng Anh",
      "Chu·∫©n b·ªã cho c√°c b√†i ki·ªÉm tra ng·ªØ ph√°p ·ªü tr∆∞·ªùng",
    ],
    output: ["Ch·ª©ng Ch·ªâ Google AI"],
    duration: "Linh ho·∫°t",
  },
];

export function Courses() {
  const ref = useRef(null);
  const isInView = useInView(ref, { once: true, amount: 0.2 });
  const controls = useAnimation();

  useEffect(() => {
    if (isInView) {
      controls.start("visible");
    }
  }, [isInView, controls]);

  const container = {
    hidden: { opacity: 0 },
    visible: {
      opacity: 1,
      transition: {
        staggerChildren: 0.1,
      },
    },
  };

  const item = {
    hidden: { opacity: 0, y: 20 },
    visible: {
      opacity: 1,
      y: 0,
      transition: {
        duration: 0.5,
      },
    },
  };

  const getLinkHref = (slug: string) => {
    return "/" + slug;
  };

  return (
    <section
      // bg-gradient-to-br from-[#f0f8ff] to-[#ffffff]

      className="min-h-[60vh] md:min-h-[70vh] flex items-center py-8 md:py-12 lg:py-16 bg-gradient-to-br from-[#f0f8ff] to-[#ffffff]"
      id="courses"
      ref={ref}
    >
      <div className="container-custom">
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={isInView ? { opacity: 1, y: 0 } : { opacity: 0, y: 20 }}
          transition={{ duration: 0.5 }}
          className="text-center max-w-3xl mx-auto mb-8 md:mb-12"
        >
          <h2 className="text-3xl md:text-4xl lg:text-5xl font-bold text-gray-900 mb-3 md:mb-4">
            C√°c kh√≥a h·ªçc t·∫°i <span className="text-primary">Chamchi</span>
          </h2>
          <p className="text-sm md:text-base text-gray-700">
            Ch√∫ng t√¥i cung c·∫•p nhi·ªÅu kh√≥a h·ªçc kh√°c nhau ƒë·ªÉ ƒë√°p ·ª©ng nhu c·∫ßu v√†
            m·ª•c ti√™u c·ªßa t·ª´ng h·ªçc vi√™n
          </p>
        </motion.div>

        <motion.div
          variants={container}
          initial="hidden"
          animate={isInView ? "visible" : "hidden"} // ch·ª© kh√¥ng d√πng controls
          // className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-2 gap-4 md:gap-6 max-w-4xl mx-auto "
          className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4 md:gap-6 max-w-6xl mx-auto"
        >
          {courses.map((course) => (
            <motion.div
              key={course.id}
              variants={item}
              className=" bg-white rounded-xl shadow-md overflow-hidden hover:shadow-lg transition-all duration-300 hover:-translate-y-2 active:scale-95 touch-manipulation hover:cursor-pointer"
              onClick={() => {
                // window.location.href = `/courses/${course.slug}`;
                window.location.href = getLinkHref(course.slug);
              }}
            >
              {/* <OptimizedImage
                src={course.image}
                alt={course.title}
                fill
                className="object-cover"
                loadingClassName="bg-primary/10"
              /> */}

              <div className="relative w-full h-48 md:h-56 lg:h-64">
                <Image
                  src={course.image}
                  alt={course.title}
                  fill
                  className="object-cover"
                  placeholder="blur"
                  blurDataURL="/placeholder.png" // ho·∫∑c b·ªè d√≤ng n√†y n·∫øu kh√¥ng c·∫ßn placeholder
                />
              </div>

              <div className="p-4 md:p-6">
                <h3 className="text-lg md:text-xl font-bold text-gray-900 mb-2">
                  {course.title}
                </h3>
                <p className="text-sm md:text-base text-gray-700 mb-3 md:mb-4 line-clamp-2">
                  {course.description}
                </p>

                {false && (
                  <div className="mb-3 md:mb-4">
                    <ul className="space-y-1">
                      {course.features.map((feature, index) => (
                        <li key={index} className="flex items-start">
                          <svg
                            xmlns="http://www.w3.org/2000/svg"
                            width="14"
                            height="14"
                            viewBox="0 0 24 24"
                            fill="none"
                            stroke="currentColor"
                            strokeWidth="2"
                            strokeLinecap="round"
                            strokeLinejoin="round"
                            className="text-primary mr-2 mt-0.5"
                          >
                            <polyline points="20 6 9 17 4 12"></polyline>
                          </svg>
                          <span className="text-xs md:text-sm text-gray-600">
                            {feature}
                          </span>
                        </li>
                      ))}
                    </ul>
                  </div>
                )}
                <div className="flex items-center mb-2">
                  ‚è±Ô∏è
                  <span className="text-xs md:text-sm text-gray-600 ml-2">
                    <strong> Th·ªùi gian</strong>: {course.duration}
                  </span>
                </div>

                <div className="flex items-center mb-2">
                  üéØ
                  <span className="text-xs md:text-sm text-gray-600 ml-2">
                    <strong>Chu·∫©n ƒë·∫ßu ra</strong>: {course.output?.[0]}
                  </span>
                </div>

                <div
                  className="flex justify-between items-center mt-4 gap-5"
                  onClick={(e) => {
                    e.stopPropagation(); // NgƒÉn ch·∫∑n s·ª± ki·ªán click lan truy·ªÅn l√™n motion.div
                  }}
                >
                  <Link
                    // href={`/courses/${course.slug}`}
                    href={getLinkHref(course.slug)}
                    className="w-1/2 btn block text-center py-2 px-4 bg-primary text-white hover:bg-primary/90 transition-colors text-sm md:text-base rounded-xl"
                  >
                    T√¨m hi·ªÉu th√™m
                  </Link>

                  <RegisterNow title="ƒêƒÉng k√Ω ngay" color="yellow" />
                </div>
              </div>
            </motion.div>
          ))}
        </motion.div>

        {/* <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={isInView ? { opacity: 1, y: 0 } : { opacity: 0, y: 20 }}
          transition={{ duration: 0.5, delay: 0.4 }}
          className="text-center mt-10 md:mt-16"
        >
          <Link href="#contact" className="btn-accent rounded-xl">
            ƒêƒÉng k√Ω t∆∞ v·∫•n mi·ªÖn ph√≠
          </Link>
        </motion.div> */}
      </div>
    </section>
  );
}
